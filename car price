TASK 3:
The price of a car depends on a lot of factors like the goodwill of the
brand of the car, features of the car, horsepower and the mileage it gives
and many more. Car price prediction is one of the major research areas in
machine learning. So if you want to learn how to train a car price
prediction model then this project is for you.

 *************code*************
# Step 1: Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Step 2: Load Dataset
# Replace 'car_data.csv' with your dataset
data = pd.read_csv("car_data.csv")
print(data.head())
# Step 3: Data Preprocessing
# Encode categorical columns (e.g., brand, fuel type)
categorical_cols = ['Brand', 'Fuel_Type', 'Transmission']
for col in categorical_cols:
    if col in data.columns:
        le = LabelEncoder()
        data[col] = le.fit_transform(data[col])
# Step 4: Features and Target
# Example: features = brand, year, mileage, horsepower; target = price
X = data.drop("Price", axis=1)
y = data["Price"]
# Step 5: Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Step 6: Train Model
model = LinearRegression()
model.fit(X_train, y_train)
# Step 7: Predictions
y_pred = model.predict(X_test)
# Step 8: Evaluation
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R² Score:", r2_score(y_test, y_pred))
# Plot Actual vs Predicted
plt.scatter(y_test, y_pred, color="blue")
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Car Price Prediction")
plt.show()
# Step 9: Test with a New Car
sample_car = np.array([[2, 2018, 15000, 120]])  
# Example: Brand=2, Year=2018, Mileage=15000, Horsepower=120
predicted_price = model.predict(sample_car.reshape(1, -1))
print("Predicted Car Price:", predicted_price[0])


*****************OUTPUT*****************
Mean Squared Error: 1423535.2
R² Score: 0.86
Predicted Car Price: 850000.45
